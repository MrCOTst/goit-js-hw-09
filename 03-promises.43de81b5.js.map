{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,UAC/BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBA2BtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,C,SAAEL,E,MAAUC,GAClC,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLP,EACFK,EAAQF,IAERG,GAAO,IAAME,QAAQC,IAAI,WACzBD,QAAQC,IAAIV,MAEbA,MApCPT,EAAKC,OAAOmB,iBAAiB,SAE7B,SAAmBC,GACjBA,EAAEC,iBACF,IAAIC,EAASC,OAAOxB,EAAKM,YAAYmB,OACjCC,EAAQF,OAAOxB,EAAKI,WAAWqB,OAC/BE,EAAOH,OAAOxB,EAAKK,UAAUoB,OAC7BG,EAAW,KAEf,IAAKA,EAAW,EAAGA,GAAYL,EAAQK,GAAY,EACjDV,QAAQC,IAAI,QAASQ,GACrBT,QAAQC,IAAI,SAAUO,GACtBR,QAAQC,IAAI,YAAaS,GAEzBrB,EAAcqB,EAAUF,GACrBG,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBX,EAAAgC,OAAOC,QAAQ,uBAAqBvB,QAAiBC,UAEtDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBX,EAAAgC,OAAOG,QAAQ,sBAAoBzB,QAAeC,UAEtDiB,GAASC,KAmBb3B,EAAKC,OAAOiC,MAAMC,UAAY,OAC9BnC,EAAKC,OAAOiC,MAAME,WAAa,OAC/BpC,EAAKC,OAAOiC,MAAMG,UAAY,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  button: document.querySelector('button'),\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n};\nrefs.button.addEventListener('click', startProm);\n\nfunction startProm(e) {\n  e.preventDefault();\n  let amount = Number(refs.inputAmount.value);\n  let delay = Number(refs.inputDelay.value);\n  let step = Number(refs.inputStep.value);\n  let position = null;\n\n  for (position = 1; position <= amount; position += 1) {\n    console.log('step:', step);\n    console.log('delay:', delay);\n    console.log('position:', position);\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(objectPromise);\n      } else {\n        reject(() => console.log('error'));\n        console.log(delay);\n      }\n    }, delay);\n  });\n}\n\nrefs.button.style.marginTop = '10px';\nrefs.button.style.marginLeft = '10px';\nrefs.button.style.maxHeight = '50px';\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","button","document","querySelector","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","setTimeout","console","log","addEventListener","e","preventDefault","amount","Number","value","delay1","step","position1","then","Notify","success","catch","failure","style","marginTop","marginLeft","maxHeight"],"version":3,"file":"03-promises.43de81b5.js.map"}